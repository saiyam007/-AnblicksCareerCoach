# ============================================================================
# Career Coach AI Copilot - Environment Configuration Template
# ============================================================================
# Copy this content to your .env file and update the values
# 
# ENVIRONMENTS:
# - Local: Development on your machine with local DynamoDB
# - Development: AWS Lambda + AWS DynamoDB (same credentials as production)
# - Production: AWS Lambda + AWS DynamoDB (same credentials as development)
# ============================================================================

# ============================================================================
# Application Settings
# ============================================================================
APP_NAME=Career Coach AI CoPilot Backend
APP_VERSION=1.0.0
ENVIRONMENT=development
DEBUG=True
API_V1_PREFIX=/api/v1

# ============================================================================
# Server Configuration (Local Development Only)
# ============================================================================
HOST=0.0.0.0
PORT=8000
RELOAD=True

# ============================================================================
# Security - JWT Configuration
# ============================================================================
# IMPORTANT: Use strong secret keys in production!
SECRET_KEY=vJj8W6InMGGuDY4dtEIooFuVsO7ScP-DdKIf04qXQ5Q
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=1440
REFRESH_TOKEN_EXPIRE_DAYS=7

# ============================================================================
# CORS Settings (Environment-specific)
# ============================================================================
# Local Development
CORS_ORIGINS=["http://localhost:3000", "http://localhost:5173"]
CORS_CREDENTIALS=true
CORS_METHODS=["*"]
CORS_HEADERS=["*"]

# ============================================================================
# AWS Configuration (SHARED for Local/Dev/Prod)
# ============================================================================
# Use your actual AWS credentials here (SAME for all environments)
AWS_ACCESS_KEY_ID=your_aws_access_key_here
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key_here
AWS_REGION=us-east-2

# DynamoDB Configuration (SHARED TABLES)
# All environments use the same DynamoDB tables for simplicity
DYNAMODB_TABLE_NAME=Users
DYNAMODB_DATA_TABLE_NAME=career-coach-data
DYNAMODB_REGION=us-east-1

# Database Strategy:
# - Local: Docker DynamoDB (for development)
# - Dev/Prod: AWS DynamoDB (shared tables)
# Set DYNAMODB_ENDPOINT_URL=http://localhost:8000 for LOCAL ONLY
# Leave empty for AWS environments
DYNAMODB_ENDPOINT_URL=http://localhost:8000

# ============================================================================
# AI Configuration (AWS Bedrock)
# ============================================================================
BEDROCK_MODEL_ID=arn:aws:bedrock:us-east-2:689960076039:inference-profile/global.anthropic.claude-sonnet-4-5-20250929-v1:0
BEDROCK_REGION=us-east-2
DRY_RUN=false

# ============================================================================
# Google OAuth 2.0
# ============================================================================
# Get your credentials from: https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID=464416542951-nc7cdhnl7an7dghsaikpfe3fulsuntor.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=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

# ============================================================================
# Logging
# ============================================================================
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE_PATH=logs/app.log

# ============================================================================
# Testing
# ============================================================================
TESTING=False

# ============================================================================
# Environment Detection (Auto-detected)
# ============================================================================
# These are automatically detected by the application:
# - AWS_LAMBDA_FUNCTION_NAME: Set by AWS Lambda runtime
# - is_lambda: Detected based on AWS_LAMBDA_FUNCTION_NAME
# - is_local: Opposite of is_lambda




# ============================================================================

# Specific Bedrock Agent IDs (New - More Descriptive)

# ============================================================================

# Detailed Roadmap Generation Agent

BEDROCK_DETAILED_ROADMAP_AGENT_ID=YOUR_DETAILED_ROADMAP_AGENT_ID

BEDROCK_DETAILED_ROADMAP_AGENT_ALIAS_ID=YOUR_DETAILED_ROADMAP_AGENT_ALIAS_ID
 
# Assessment Generation and Evaluation Agent

BEDROCK_ASSESSMENT_AGENT_ID=YOUR_ASSESSMENT_AGENT_ID

BEDROCK_ASSESSMENT_AGENT_ALIAS_ID=YOUR_ASSESSMENT_AGENT_ALIAS_ID

 